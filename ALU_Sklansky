module ALU_Sklansky(
    input clk,
    input [3:0] A, B, C,
    output reg [4:0] X,
    output reg [5:0] Y
);

    // Registers for inputs
    reg [3:0] A_reg, B_reg, C_reg;

    // Internal wires
    wire [4:0] X_wire;
    wire [5:0] Y_wire;


    // Instantiate Adders
    sklansky_4bit_adder ADDER (
        .A(A_reg),
        .B(B_reg),
        .X(X_wire)
    );

    sklansky_5bit_subtractor SUBTRACTOR (
        .X(X_wire),
        .C(C_reg),
        .Y(Y_wire)
    );

    // Sequential logic 
    always @(posedge clk) begin
        A_reg <= A;
        B_reg <= B;
        C_reg <= C;
        X     <= X_wire; // A + B
        Y     <= Y_wire; // (A + B) - C
    end

endmodule
